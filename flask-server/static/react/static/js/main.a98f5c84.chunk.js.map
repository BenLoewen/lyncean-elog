{"version":3,"sources":["logo.svg","App.js","serviceWorker.js","index.js"],"names":["module","exports","buttonId","iter","last","shownFiles","uploadedImages","list_of_logs","lastUrl","testing_config_entered","glob_comp","glob_nums","glob_entries","Post","props","Container","Row","class","Col","xs","path","file","text","comment","Demo","test","testingConfigToTable","className","ElogNavbar","Button","id","variant","onClick","window","location","href","reload","Card","style","width","Body","Title","Subtitle","ListGroup","ListGroupItem","Link","AddLogEntry","log","RecentLogs","setInterval","endOfUrl","indexOf","currUrl","slice","element","ReactDOM","render","document","getElementById","console","WriteToLog","state","form","AppendForm","oldFiles","length","TestConfiguration","username","prepend","AutosaveLog","value","this","React","Component","useState","validated","setValidated","result","i","push","InputGroup","Prepend","Checkbox","name","toString","FormControl","placeholder","Form","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","target","operator","checked0","checked","checked1","checked2","checked3","checked4","component0","component1","component2","component3","component4","number0","number1","number2","number3","number4","DropdownButton","title","Dropdown","Item","Group","as","md","controlId","Control","required","type","defaultValue","LogViewer","menu","LogMenu","items","example","LogCard","updated","CardGroup","Text","Footer","config_name","components","specs","showDetails","configs","table","Table","striped","bordered","hover","files","reset","dismissible","setTimeout","FileDrop","radioValue","setRadioValue","ButtonGroup","toggle","map","radio","idx","ToggleButton","key","onChange","e","val","LogDropdownBox","charAt","toUpperCase","log_opt","action","Toggle","Menu","ManualSave","inside","handleChange","bind","GenericButton","thumbsContainer","display","flexDirection","flexWrap","marginTop","thumb","borderRadius","border","marginBottom","marginRight","height","padding","boxSizing","thumbInner","minWidth","overflow","img","setValue","useDropzone","getFilesFromEvent","myCustomFileGetter","getRootProps","acceptedFiles","getInputProps","splice","f","thumbs","src","preview","useEffect","forEach","URL","revokeObjectURL","a","fileList","dataTransfer","item","endsWith","Object","assign","createObjectURL","Navbar","bg","Nav","Brand","Array","prototype","remove","what","ax","arguments","L","Comment","caption","File","substring","lastIndexOf","Clock","date","Date","setState","toLocaleString","User","Line","App","Boolean","hostname","match","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.a98f5c84.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState, setShow, useEffect } from 'react';\nimport ReactDOM, { render } from 'react-dom'\nimport logo from './logo.svg';\nimport './App.css';\nimport Dropzone from 'react-dropzone';\nimport {useDropzone} from 'react-dropzone';\nimport { getDroppedOrSelectedFiles } from 'html5-file-selector';\nimport styled from 'styled-components';\nimport useForceUpdate from 'use-force-update';\nimport jsxToString from 'jsx-to-string';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport Button from 'react-bootstrap/Button'\nimport Alert from 'react-bootstrap/Button'\nimport Card from 'react-bootstrap/Card'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport FormControl from 'react-bootstrap/FormControl'\nimport Container from 'react-bootstrap/Container'\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport Form from 'react-bootstrap/Form'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport ToggleButton from 'react-bootstrap/ToggleButton'\nimport Table from 'react-bootstrap/Table'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ListGroup from 'react-bootstrap/ListGroup'\nimport ListGroupItem from 'react-bootstrap/ListGroupItem'\nimport $ from \"jquery\";\nimport DropdownMenu from 'react-bootstrap/esm/DropdownMenu';\nimport DropdownButton from 'react-bootstrap/DropdownButton'\nimport { createPopper } from '@popperjs/core/lib/createPopper';\nimport { auto } from '@popperjs/core';\n\nlet buttonId = 0\nlet iter = 0\nlet last=-1\nlet files = []\nlet shownFiles = []\nlet uploadedImages = []\nlet alerts = [<Alert key={1} variant=\"success\">Success</Alert>,<Alert key={2} variant=\"warning\">Warning, changes may have not gone through!</Alert>]\nconst list_of_logs = [\"testing\", \"operations\", \"custom\"]\nlet lastUrl = \"\"\nlet testing_config_entered = true;\n\n//THESE ARE TEMPORARY AND SHOULD BE REMOVED WHEN APP INTEGRATED IN FLASK SERVER\nlet glob_config = \"High Power RF Test\"\nlet glob_comp = [\"Structures\",\"Loads\"]\nlet glob_nums = [\"#,#,#,#\",\"#,#,#,#\"]\n\nlet glob_entries = []\n\nlet glob_user = \"operator\"\n\nlet glob_log = \"Testing Log 09/28/20\"\n\nlet test_log = \"Example\"\n//\n\n\nfunction App() {\n  let endOfUrl = window.location.href.indexOf(\"#\")\n  let currUrl = window.location.href.slice(endOfUrl)\n  lastUrl = currUrl\n  const element = <h1></h1>;\n  switch(currUrl){\n    case \"#/write-to/testing-log\":\n      return(<AddLogEntry log={\"testing\"}/>);\n    case \"#/write-to/operations-log\":\n      return(<AddLogEntry log={\"operations\"}/>);\n    case \"#/view/recent-logs\":\n      return(<RecentLogs/>);\n      break;\n    case \"#/view/recent-logs/demo\":\n      return(<Demo/>);\n      break;\n    default:\n      window.location.href = \"#/write-to/testing-log\"\n      window.location.reload(false);\n  }\n}\n\nfunction Post(props){\n    return(<Container>\n            <Row><div class=\"italic-large\">Posted at 09:39 by operator</div></Row>\n            <Row>\n              <Col xs={12}>\n                <File path={props.file}/>\n                <Comment text={props.comment}/>\n              </Col>\n            </Row>\n           </Container>);\n};\n\nfunction Demo(){\n  let test = (<Post file=\"pics\" comment=\"Rack temperatures\"/>);\n\n  function handleChange(){\n    window.location.href = \"#/view/recent-logs\"\n    window.location.reload(false);\n  }\n\n  function saveAsPdf(){\n\n  }\n\n  let text = testingConfigToTable(\"Rod L\",glob_config,glob_comp,glob_nums,true)\n\n  return(<div className=\"App\">\n      <Container>\n        <Row>\n          <Col xs={12}>\n            <ElogNavbar/>\n            <Container>\n              <Row>\n              <Button id=\"back-button\" variant=\"light\" onClick={() => handleChange()}>Back</Button>\n              <Button id=\"back-button\" variant=\"light\" onClick={() => saveAsPdf()}>Save as PDF</Button>\n              <Line/>\n              </Row>\n              <Row>\n                <Card style={{ width: '80rem' }}>\n                  <Card.Body>\n                    <Card.Title>{glob_log}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">First Entry: 09/28/20 09:00 PST</Card.Subtitle>\n                    <Card.Subtitle className=\"mb-2 text-muted\">Last Entry: 09/28/20 09:00 PST</Card.Subtitle>\n                    <ListGroup className=\"list-group-flush\">\n                      <ListGroupItem>\n                        {text}\n                      </ListGroupItem>\n                      <ListGroupItem>\n                        {test}\n                      </ListGroupItem>\n                    </ListGroup>\n                    <Card.Link href=\"#\">Previous Day's Log</Card.Link>\n                    <Card.Link href=\"#\">Next Day's Log</Card.Link>\n                  </Card.Body>\n                </Card>\n              </Row>\n            </Container>\n          </Col>\n        </Row>\n      </Container>\n    </div>);\n}\n\nfunction AddLogEntry(props){\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col xs={12}>\n            <ElogNavbar/>\n            <WriteToLog log={props.log}/>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nfunction RecentLogs(props){\n  return (\n    <div className=\"App\">\n      <Container>\n        <Row>\n          <Col xs={12}>\n            <ElogNavbar/>\n            <LogViewer/>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\n\nfunction tick(){\n  let endOfUrl = window.location.href.indexOf(\"#\")\n  let currUrl = window.location.href.slice(endOfUrl)\n  if(lastUrl!=currUrl){\n    const element = <h1></h1>;\n    switch(currUrl){\n      case \"#/write-to/testing-log\":\n        ReactDOM.render(<AddLogEntry log={\"testing\"}/>, document.getElementById('root'));\n        console.log('HEY')\n        //window.location.reload(false);\n        break;\n      case \"#/write-to/operations-log\":\n        ReactDOM.render(<AddLogEntry log={\"operations\"}/>, document.getElementById('root'));\n        console.log('HEY')\n        //window.location.reload(false);\n        break;\n      case \"#/view/recent-logs\":\n        ReactDOM.render(<RecentLogs log={\"operations\"}/>, document.getElementById('root'));\n        console.log('wat')\n        //window.location.reload(false);\n        break;\n      default:\n        ReactDOM.render(element, document.getElementById('root'));\n        window.location.reload(false);\n    }\n  }\n}\n\nsetInterval(tick, 100);\n\nfunction header_exists(log){\n  console.log(testing_config_entered)\n  if(testing_config_entered==false){\n    return false;\n  }\n  if(glob_comp.length>0){\n    return true;\n  };\n  return false;\n  $.ajax({\n        type: \"POST\",\n        url: \"/header_exists\",\n        dataType : \"json\",\n        contentType: \"application/json; charset=utf-8\",\n        data : JSON.stringify(log),\n        success: function(result){\n            return result[\"exists\"]\n        },\n        error: function(request, status, error){\n            console.log(\"Error\");\n            console.log(request)\n            console.log(status)\n            console.log(error)\n        }\n    });\n}\n\nclass WriteToLog extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {log:props.log}\n    //Has this log been written to?\n    this.form = (<AppendForm log={\"selected_log\"} oldFiles={[]} comment={\"\"}/>);\n\n    if(header_exists(props.log)==false){\n      this.form = (<TestConfiguration/>)\n    }\n\n    this.element = (\n      <Container>\n        <div id=\"info-group\">\n          <Row> <Clock/> </Row>\n          <Row> <User username={glob_user}/></Row>\n        </div>\n        <Row>\n          <Col xs={4}><LogDropdownBox log={this.state.log} prepend={\"Adding Entry to: \"}/></Col>\n          <Col xs={4}><AutosaveLog value={'1'}/></Col>\n          <Col xs={4}><ManualSave/></Col>\n        </Row>\n        {this.form}\n      </Container>\n    );\n  }\n\n  render(){\n    return this.element\n  }\n}\n\n\nfunction TestConfiguration(props) {\n  const [validated, setValidated] = useState(false);\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(true);\n    }\n    else{\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(false);\n      let i = 0\n      let operator = event.target.operator.value\n      let checked = [event.target.checked0.checked,event.target.checked1.checked,event.target.checked2.checked,event.target.checked3.checked,event.target.checked4.checked]\n      let components = [event.target.component0.value, event.target.component1.value, event.target.component2.value, event.target.component3.value, event.target.component4.value]\n      let numbers = [event.target.number0.value, event.target.number1.value, event.target.number2.value, event.target.number3.value, event.target.number4.value]\n      for(;i<5;i++){\n        if(checked[i]){\n          //glob_comp.push(components[i])\n          //glob_nums.push(numbers[i])\n        }\n      }\n      testing_config_entered=true\n      ReactDOM.render(<AddLogEntry log={\"testing\"}/>, document.getElementById('root'));\n    }\n  };\n\n  let result = []\n  let i =0\n  for(; i<5;i++){\n    result.push(\n                  <div class=\"test-config\">\n                    <InputGroup className=\"mb-3\">\n                      <InputGroup.Prepend>\n                        <InputGroup.Checkbox name={\"checked\"+i.toString()}/>\n                      </InputGroup.Prepend>\n                      <FormControl placeholder=\"Component(s)\" name={\"component\"+i.toString()}/>\n                      <FormControl placeholder=\"Specification (ex. serial numbers)\" name={\"number\"+i.toString()}/>\n                    </InputGroup>\n                  </div>\n                );\n  }\n  return (<div>\n            <div class=\"italic\" id=\"info\">No configuration has been submitted for the testing log</div>\n            <Form noValidate validated={validated} onSubmit={handleSubmit}>\n              <Form.Row>\n              <Container>\n                <Row>\n                  <Col xs = \"3\">\n                    <DropdownButton id=\"dropdown-adv\" title=\"Load Previous\">\n                      <Dropdown.Item href=\"#/action-1\">Example Config</Dropdown.Item>\n                      <Dropdown.Item href=\"#/action-1\">Another Saved Config</Dropdown.Item>\n                    </DropdownButton>\n                  </Col>\n                  <Col xs = \"9\">\n                    <Form.Group id=\"comment-input\" as={Col} md=\"12\" controlId=\"validationCustom01\">\n                            <Form.Control\n                            required\n                            id=\"operator\"\n                            type=\"text\"\n                            name=\"operator\"\n                            placeholder= \"Operator(s)\"\n                            defaultValue=\"\"\n                          />\n                    </Form.Group>\n\n\n                    <Form.Group id=\"comment-input\" as={Col} md=\"12\" controlId=\"validationCustom01\">\n                      <Form.Control\n                        required\n                        id=\"config_name\"\n                        type=\"text\"\n                        name=\"config_name\"\n                        placeholder= \"Configuration Name\"\n                        defaultValue=\"\"\n                      />\n                    </Form.Group>\n                  </Col>\n                </Row>\n              </Container>\n              </Form.Row>\n              <Container>\n                <Row>\n                  <Col xs=\"3\">\n\n                  </Col>\n                  <Col xs=\"9\">\n                    {result}\n                    <Button type=\"submit\">Submit</Button>\n                  </Col>\n                </Row>\n              </Container>\n            </Form>\n            <div id=\"empty\"></div>\n          </div>);\n}\n\n\nclass LogViewer extends React.Component{\n  constructor(props){\n    super(props)\n    this.menu = (<LogMenu/>);\n  }\n\n  render(){\n    return this.menu;\n  }\n}\n\nfunction LogMenu(props){\n\n  let text = testingConfigToTable(\"Rod L\",glob_config,glob_comp,glob_nums,false)\n  let title = glob_log\n  let id = \"0\"\n\n  let items = []\n\n  let example = (<div>Header entry shown here.</div>);\n\n  items.push(<LogCard text={text} title={title} id={id} updated=\"today\"/>);\n  items.push(<LogCard text={example} title=\"Title of Log Shown Here\" id=\"demo\" updated=\"today\"/>);\n\n  return(<CardGroup>{items}</CardGroup>);\n  //glob_log = title\n  //glob_user\n  //glob_comp.push(components(STR))\n  //glob_nums.push(numbers(STR))\n  //glob_entries.push((glob_user(STR),files(LIST OF STR),event.target.comment.value(STR)))\n}\n\nlet Image = function(props){\n  let url = props.url\n  //let name = url.substring(url.lastIndexOf('.'))\n  //let isCaptioned = props.isCaptioned\n  //let caption = props.caption\n  return (<Container>\n            <Row>\n              <Col xs={10}>\n                <Image src={url} thumbnail />\n              </Col>\n            </Row>\n          </Container>);\n}\n\nfunction LogCard(props){\n  return(<Card style={{ width: '18rem' }}>\n    <Card.Body>\n    <Card.Title>{props.title}</Card.Title>\n      <Card.Text>\n        {props.text}\n      </Card.Text>\n      <Card.Link href={\"#/view/recent-logs/demo\"}>View Log</Card.Link>\n    </Card.Body>\n    <Card.Footer>\n    <small className=\"text-muted\">Last updated {props.updated}</small>\n    </Card.Footer>\n  </Card>);\n}\n\nfunction testingConfigToTable(operator, config_name, components,specs, showDetails){\n  let configs = []\n  if(showDetails){\n    let table = []\n    for(var i = 0; i<components.length; i++){\n      table.push(<tr>\n                      <td>{components[i]}</td>\n                      <td>{specs[i]}</td>\n                    </tr>);\n    }\n    configs = (<Table striped bordered hover>\n                <thead>\n                  <tr>\n                    <th>Component</th>\n                    <th>Specification</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {table}\n                </tbody>\n              </Table>);\n  }\nreturn(<div>\n          <Table striped bordered hover><thead><tr><th>Operator(s)</th></tr></thead><tbody><tr><td>{operator}</td></tr></tbody></Table>\n          <Table striped bordered hover><thead><tr><th>Configuration Name</th></tr></thead><tbody><tr><td>{config_name}</td></tr></tbody></Table>\n          {configs}\n        </div>);\n}\n\n\nfunction sendAlert(success){\n  if(success=true){\n    render(<Alert id=\"success\" variant=\"success\" dismissible>Success</Alert>,document.getElementById('empty'));\n    setTimeout(() => {   render(<div/>,document.getElementById('empty')); }, 3000);\n  }\n  if(success=false){\n    render(<Alert id=\"success\" variant=\"warning\" dismissible>Warning! Something went wrong!</Alert>,document.getElementById('empty'));\n    setTimeout(() => {   render(<div/>,document.getElementById('empty')); }, 3000);\n  }\n}\n\n\nfunction AppendForm(props) {\n  const [validated, setValidated] = useState(false);\n  let files = props.oldFiles\n  let comment = props.comment\n  if(comment.length==0){\n    comment = \"Enter comment here\"\n  }\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget;\n\n    console.log(event.target.comment.value)\n\n    if (form.checkValidity() === false) {\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(true);\n    }\n    else{\n      event.preventDefault();\n      event.stopPropagation();\n      setValidated(false);\n      glob_entries.push((glob_user,files,event.target.comment.value))\n      files = []\n      form.reset()\n      console.log(files)\n      sendAlert(true)\n    }\n  };\n\n  return (\n    <div>\n    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n      <FileDrop oldFiles={[]} />\n      <Form.Row>\n        <Form.Group id=\"comment-input\" as={Col} md=\"12\" controlId=\"validationCustom01\">\n          <Form.Control\n            required\n            type=\"text\"\n            name=\"comment\"\n            placeholder= {comment}\n            defaultValue=\"\"\n          />\n        </Form.Group>\n      </Form.Row>\n      <Button type=\"submit\">Submit form</Button>\n    </Form>\n    <div id=\"empty\"></div>\n    </div>\n  );\n}\n\nfunction AutosaveLog(props) {\n  const [checked, setChecked] = useState(false);\n  const [radioValue, setRadioValue] = useState(props.value);\n\n  const radios = [\n    { name: 'On', value: '1' },\n    { name: 'Off', value: '0' },\n  ];\n\n  function changeAutoSave(val){\n    console.log(val)\n    if(val==0 || val==1){\n      setRadioValue(val)\n    }\n  }\n\n  return (\n      <Container>\n        <span>Autocommit: </span>\n        <ButtonGroup toggle>\n          {radios.map((radio, idx) => (\n            <ToggleButton\n              key={idx}\n              type=\"radio\"\n              variant=\"light\"\n              name=\"radio\"\n              value={radio.value}\n              checked={radioValue === radio.value}\n              onChange={(e) => changeAutoSave(e.currentTarget.value)}\n            >\n              {radio.name}\n            </ToggleButton>\n          ))}\n        </ButtonGroup>\n      </Container>\n  );\n}\n\n\nclass LogDropdownBox extends React.Component{\n  constructor(props){\n    super(props)\n    let toggle = props.log.charAt(0).toUpperCase() + props.log.slice(1) + \" Log\"\n    let menu = []\n\n    var log_opt = ''\n    for(log_opt of list_of_logs){\n      let name = log_opt.charAt(0).toUpperCase() + log_opt.slice(1) + \" Log\";\n      let action = \"#/write-to/\" + log_opt + \"-log\"\n      menu.push(<Dropdown.Item href={action}>{name}</Dropdown.Item>)\n    }\n    this.state = {toggle:toggle,menu:menu,prepend:props.prepend}\n  }\n\n  render(){\n    return(\n          <Dropdown>\n            <span>{this.state.prepend}</span>\n            <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\n              {this.state.toggle}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              {this.state.menu}\n            </Dropdown.Menu>\n          </Dropdown>);\n  }\n}\n\nclass ManualSave extends React.Component{\n  constructor(props){\n    super(props)\n    this.text = props.text\n    this.inside = props.inside\n    this.id = props.id\n    this.onChange = props.onChange;\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(){\n    console.log('manual save button bressed')\n  }\n\n  render(){\n    return(\n      <Button variant=\"light\" onClick={() => this.handleChange()}>Manually Commit Log</Button>\n    );\n  }\n}\n\nclass GenericButton extends React.Component{\n  constructor(props){\n    super(props)\n    this.text = props.text\n    this.inside = props.inside\n    this.id = props.id\n    this.onChange = props.onChange;\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  handleChange(){\n    this.onChange(this.id)\n  }\n\n  render(){\n    return(\n\n      <div> {this.text} <button className='btn btn-link' onClick={() => this.handleChange()}>{this.inside}</button></div>\n    );\n  }\n}\n\nconst thumbsContainer = {\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: 16,\n};\n\nconst thumb = {\n  display: 'inline-flex',\n  borderRadius: 2,\n  border: '1px solid #eaeaea',\n  marginBottom: 8,\n  marginRight: 8,\n  width: 100,\n  height: 100,\n  padding: 4,\n  boxSizing: 'border-box'\n};\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden'\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%'\n};\n\n\nfunction FileDrop(props) {\n  const [value, setValue, getValue] = React.useState(\"\");\n  //Dropzone.myDropzone.options = {};\n  const {acceptedFiles, getRootProps, getInputProps} = useDropzone({\n    getFilesFromEvent: event => myCustomFileGetter(event)\n  });\n  shownFiles = props.oldFiles\n  let files = []\n\n  function handleChange(name){\n    for(var i = 0; i < shownFiles.length;i++){\n      if (shownFiles[i].name===name) {\n       shownFiles.splice(i,1);\n       uploadedImages.splice(i,1);\n       files.splice(i,1);\n      }\n    };\n    setValue(iter++);\n  }\n\n  if(last===shownFiles.length){\n    buttonId = buttonId-shownFiles.length\n  }\n\n  for (var i = 0; i < shownFiles.length; i++) {\n    const f = shownFiles[i];\n    files.push(<GenericButton key={buttonId++} id={f.name} onChange={handleChange} text={f.name} inside={\"X\"}/>)\n  }\n\n  last=shownFiles.length\n\n  const thumbs = uploadedImages.map(file => (\n    <div style={thumb} key={file.name}>\n      <div style={thumbInner}>\n        <img\n          src={file.preview}\n          style={img}\n        />\n      </div>\n    </div>\n  ));\n\n  useEffect(() => () => {\n    // Make sure to revoke the data uris to avoid memory leaks\n    uploadedImages.forEach(file => URL.revokeObjectURL(file.preview));\n  }, [uploadedImages]);\n\n\n  return (\n    <Container id=\"file-drop\">\n      <hr/>\n      <div {...getRootProps({className: 'dropzone'})}>\n        <input {...getInputProps()} />\n        <span>Drag 'n' drop some files here, or click to select files</span>\n      </div>\n      <hr/>\n      <div>\n        Uploaded Files\n        {files}\n      </div>\n      <div>\n        <aside style={thumbsContainer}>\n          {thumbs}\n        </aside>\n      </div>\n    </Container>\n  );\n}\n\nArray.prototype.remove = function() {\n  var what, a = arguments, L = a.length, ax;\n  while (L && this.length) {\n      what = a[--L];\n      while ((ax = this.indexOf(what)) !== -1) {\n          this.splice(ax, 1);\n      }\n  }\n  return this\n\n};\n\nasync function myCustomFileGetter(event) {\n  const files = [];\n  const fileList = event.dataTransfer ? event.dataTransfer.files : event.target.files;\n\n  for (var i = 0; i < fileList.length; i++) {\n    const file = fileList.item(i);\n    files.push(file);\n    shownFiles.push(file)\n    if(file.name.endsWith(\".jpg\") || file.name.endsWith(\".png\") || file.name.endsWith(\".jpeg\")){\n      Object.assign(file, {\n        preview: URL.createObjectURL(file)\n      })\n      uploadedImages.push(file)\n    }\n  }\n\n  return files;\n}\n\nfunction ElogNavbar(props){\n  return (<Navbar bg=\"primary\" variant=\"dark\">\n            <Nav className=\"mr-auto\">\n              <Nav.Link href=\"#/write-to/testing-log\">Add Log Entry</Nav.Link>\n              <Nav.Link href=\"#/view/recent-logs\">Recent Logs</Nav.Link>\n              <Nav.Link href=\"#search\">Search</Nav.Link>\n            </Nav>\n            <Navbar.Brand href=\"#/write-to/testing-log\">Lyncean Elog</Navbar.Brand>\n          </Navbar>);\n}\n\nclass Appended{\n  constructor(author,date){\n    this.message = \"Appended on\" + author + \"by\" + date\n  }\n}\n\n\nlet Comment = function(props){\n  let text = props.text\n  let caption = props.caption\n  return(<figure>\n            <div> {text} </div>\n            <figcaption>{caption}</figcaption>\n          </figure>\n  );\n}\n\nlet File = function(props){\n  let path = props.path\n  let name = path.substring(path.lastIndexOf('/') + 1)\n  return <a href={path}> {name} </a>\n}\n\nlet Stamp = function(props){\n  let timestamp = props.timestamp\n  let author = props.author\n  return <div>{timestamp}  {author}</div>\n}\n\n\nclass Clock extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {date: new Date()}\n  }\n\n  componentDidMount(){\n     window.setInterval(function () {\n      this.setState({date: new Date()});\n    }.bind(this), 1000);\n  }\n\n  render(){\n    return(<div class=\"italic\">{this.state.date.toLocaleString()}</div>);\n  }\n}\n\nlet User = function(props){\n  let username = props.username\n  return(<div class=\"italic\">Currently logged in as {username}</div>);\n}\n\nlet Line = function(props){\n  return (<div/>);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}